<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="P_GFunctionMonitor" Id="{bb1408f4-1991-4234-be48-afa7545bc102}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_GFunctionMonitor
VAR
	rtM100 :r_trig;
	ch1_actM_r : STRING;
	mcode1 : BOOL;
	mcode2: BOOL;
	mcode3: bool;
	bReadGcode: BOOL;
	fbADSRead: ADSREADEX;
	GBuffer: ARRAY[1..39]OF WORD;
	nPathPrep: WORD;
	nPlane: WORD;
	nCutterComp: WORD;
	nDeselectDiamProg: WORD;
	nZeroOffset: WORD;
	nContMode: WORD;
	nMeasureMode: WORD;
	nDeselectSpline: WORD;
	nDeselectCornerRed: WORD;
	//toString
		sPathPrep: STRING;
		sPlane: STRING;
		sCutterComp: STRING;
		sDeselectDiamProg: STRING;
		sZeroOffset: STRING;
		sContMode: STRING;
		sMeasureMode: STRING;
		sDeselectSpline: STRING;
		sDeselectCornerRed: STRING;
	fbUpdate: TON;
	sLocalAmsNet 	: STRING; 
	getAmsNet : FB_GetLocalAmsNetId;
	bLocalAmsNet : BOOL;
	
	sGCodeOut : string;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//Read active G code
IF sLocalAmsNet ='' THEN
	bLocalAmsNet := TRUE;
ELSE
	blocalamsNet := FALSE;
END_IF
getAmsNet(bExecute:=bLocalAmsNet, tTimeOut:=DEFAULT_ADS_TIMEOUT,AddrString => sLocalAmsNet);

IF Global_HMI.PLCSelectedChannel = 0 THEN
	bReadGcode := TRUE;
	ELSE breadgcode := FALSE;
END_IF
fbUpdate.PT := T#1S;
IF bReadGcode THEN
	fbUpdate.IN := TRUE;
ELSE
	fbUpdate.IN := FALSE;
END_IF

IF fbUpdate.Q THEN
	fbADSRead(
	NETID:=sLocalAmsNet, 
	PORT:=553, 
	IDXGRP:=16#120101, 
	IDXOFFS:=16#3C, 
	LEN:=SIZEOF(GBuffer), 
	DESTADDR:=ADR(GBuffer), 
	READ:=TRUE, 
	TMOUT:=T#2S, 
	BUSY=> , 
	ERR=> , 
	ERRID=> , 
	COUNT_R=> );
	
	IF NOT fbADSRead.BUSY THEN
		fbADSRead(
			NETID:=sLocalAmsNet, 
			PORT:=553, 
			IDXGRP:=16#120101, 
			IDXOFFS:=16#3C, 
			LEN:=SIZEOF(GBuffer), 
			DESTADDR:=ADR(GBuffer), 
			READ:=FALSE, 
			TMOUT:=T#2S);
		fbUpdate.IN := FALSE;
	END_IF
END_IF
//Parse them out
nPathPrep 			:= GBuffer[1];
nPlane 				:= GBuffer[5];
nCutterComp 		:= GBuffer[8];
nDeselectDiamProg 	:= GBuffer[9];
nZeroOffset 		:= GBuffer[10];
nContMode			:= GBuffer[11];
nMeasureMode 		:= GBuffer[15];
nDeselectSpline 	:= GBuffer[30];
nDeselectCornerRed 	:= GBuffer[32];
//to string
IF 	nPathPrep > 0 AND npathprep< 65535 THEN
	sPathPrep:= concat(concat('G',TO_STRING(nPathPrep)),' '); ELSE sPathPrep :=''; END_IF
IF nPlane >0 AND nPlane<65535 THEN
	sPlane:= concat(concat('G',TO_STRING(nPlane)),' '); ELSE sPlane:=''; END_IF
IF nCutterComp>0 AND nCutterComp<65535 THEN
	sCutterComp:= concat(concat('G',TO_STRING(nCutterComp)),' '); ELSE sCutterComp :=''; END_IF
IF nDeselectDiamProg >0 AND nDeselectDiamProg<65535 THEN
	sDeselectDiamProg:= concat(concat('G',TO_STRING(nDeselectDiamProg)),' '); ELSE sDeselectDiamProg :=''; END_IF
IF nZeroOffset >0 AND nZeroOffset<65535 THEN
	sZeroOffset:= concat(concat('G',TO_STRING(nZeroOffset)),' '); ELSE sZeroOffset:=''; END_IF
IF ncontmode > 0 AND ncontmode < 65535 THEN
	sContMode:= concat(concat('G',TO_STRING(nContMode)),' '); ELSE scontmode:=''; END_IF
IF nMeasureMode >0 AND nMeasureMode < 65535 THEN
	sMeasureMode:= concat(concat('G',TO_STRING(nMeasureMode)),' '); ELSE sMeasureMode := ''; END_IF
IF 	nDeselectSpline > 0 AND nDeselectSpline< 65535 THEN
	sDeselectSpline:= concat(concat('G',TO_STRING(nDeselectSpline)),' '); ELSE sDeselectSpline:=''; END_IF
IF nDeselectCornerRed >0 AND nDeselectCornerRed < 65535 THEN
	sDeselectCornerRed:= concat(concat('G',TO_STRING(nDeselectCornerRed)),' '); ELSE sDeselectCornerRed:=''; END_IF
//sGCodeOut := Concat(Concat(CONCAT('G',nPathPrep),' G'),nPlane);
sGCodeOut := Concat(Concat(Concat(Concat(Concat(Concat(Concat(Concat(sPathPrep,sPlane),sCutterComp),sDeselectDiamProg),sZeroOffset),sContMode),sMeasureMode),sDeselectSpline),sDeselectCornerRed);

//Timer
fbUpdate();]]></ST>
    </Implementation>
    <LineIds Name="P_GFunctionMonitor">
      <LineId Id="212" Count="0" />
      <LineId Id="3" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="77" Count="1" />
      <LineId Id="76" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="73" Count="1" />
      <LineId Id="167" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="4" Count="44" />
      <LineId Id="81" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="130" Count="1" />
      <LineId Id="119" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>